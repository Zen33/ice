import { createElement, useEffect } from '<%- framework %>';
<% if(isRax){ %>
  import { withRouter as defaultWithRouter } from 'rax-use-router';
<% } else { %>
  import { withRouter as defaultWithRouter } from 'react-router';
<% } %>
import createShareAPI from 'create-app-shared';
import loadRuntimeModules from './loadRuntimeModules';
import loadStaticModules from './loadStaticModules';
import staticConfig from './staticConfig';
import { setAppConfig } from './appConfig';

const {
  createBaseApp,
  withRouter,
  createHistory,
  getHistory,
  emitLifeCycles,
  usePageShow,
  usePageHide,
  withPageLifeCycle,
  pathRedirect,
  registerNativeEventListeners,
  addNativeEventListener,
  removeNativeEventListener,
} = createShareAPI({
  createElement,
  useEffect,
  withRouter: defaultWithRouter,
  loadRuntimeModules,
  loadStaticModules
});

const history = getHistory();

function initializeApp(appConfig, renderer) {
  renderer({
    appConfig,
    staticConfig,
    setAppConfig,
    createBaseApp,
    createHistory,
    getHistory,
    emitLifeCycles,
    getHistory,
    pathRedirect
  })
};

export {
  // router api
  withRouter,
  history,

  // LifeCycles api
  usePageShow,
  usePageHide,
  withPageLifeCycle,

  // events api
  registerNativeEventListeners,
  addNativeEventListener,
  removeNativeEventListener,

  // TODO:
  createBaseApp,
  emitLifeCycles
};

export default initializeApp;
